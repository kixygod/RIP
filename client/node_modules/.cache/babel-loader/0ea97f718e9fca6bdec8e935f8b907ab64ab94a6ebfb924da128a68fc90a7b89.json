{"ast":null,"code":"var _jsxFileName = \"D:\\\\Univer\\\\5sem\\\\RIP\\\\client\\\\src\\\\components\\\\AddTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodo = ({\n  onAddTodo\n}) => {\n  _s();\n  const [newTodo, setNewTodo] = useState('');\n  const handleAddTodo = () => {\n    fetch('http://localhost:3001/api/items/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newTodo,\n        completed: false // Можно указать начальное значение\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('New todo added:', data);\n      setNewTodo(''); // Очистить поле ввода после добавления заметки\n      onAddTodo(data); // Вызвать функцию-колбэк для обновления списка заметок\n    }).catch(error => {\n      console.error('Error adding new todo:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: '100 px'\n      },\n      onClick: handleAddTodo,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTodo, \"pTGhIS2rvFqJ3N696KH6pV6+hcU=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faPlus","jsxDEV","_jsxDEV","AddTodo","onAddTodo","_s","newTodo","setNewTodo","handleAddTodo","fetch","method","headers","body","JSON","stringify","name","completed","then","response","json","data","console","log","catch","error","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","onClick","icon","_c","$RefreshReg$"],"sources":["D:/Univer/5sem/RIP/client/src/components/AddTodo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddTodo = ({ onAddTodo }) => {\r\n    const [newTodo, setNewTodo] = useState('');\r\n\r\n    const handleAddTodo = () => {\r\n        fetch('http://localhost:3001/api/items/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: newTodo,\r\n                completed: false, // Можно указать начальное значение\r\n            }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('New todo added:', data);\r\n                setNewTodo(''); // Очистить поле ввода после добавления заметки\r\n                onAddTodo(data); // Вызвать функцию-колбэк для обновления списка заметок\r\n            })\r\n            .catch(error => {\r\n                console.error('Error adding new todo:', error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Введите новую заметку\"\r\n                value={newTodo}\r\n                onChange={(e) => setNewTodo(e.target.value)}\r\n            />\r\n            <button style={{ marginLeft: '100 px' }} onClick={handleAddTodo}>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTodo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,qCAAqC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAET,OAAO;QACbU,SAAS,EAAE,KAAK,CAAE;MACtB,CAAC;IACL,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;MACpCb,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAChBH,SAAS,CAACgB,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACV,CAAC;EAED,oBACItB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MACIwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sHAAuB;MACnCC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFjC,OAAA;MAAQkC,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAS,CAAE;MAACC,OAAO,EAAE9B,aAAc;MAAAiB,QAAA,eAC5DvB,OAAA,CAACH,eAAe;QAACwC,IAAI,EAAEvC;MAAO;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAtCIF,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}