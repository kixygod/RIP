{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\03bog\\\\Documents\\\\GitHub\\\\RIP\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { io } from 'socket.io-client';\nimport { Link } from 'react-router-dom';\nimport Message from './Message'; // Импортируйте компонент Message\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const socket = useMemo(() => {\n    return io('ws://localhost:8080');\n  }, []);\n  useEffect(() => {\n    socket.onmessage = event => {\n      const message = event.data;\n      setMessages(prevMessages => [...prevMessages, {\n        text: message,\n        isServer: true\n      }]);\n    };\n    return () => {\n      socket.close();\n    };\n  }, [socket]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() === '') {\n      return;\n    }\n    socket.send(newMessage);\n    setMessages(prevMessages => [...prevMessages, {\n      text: newMessage,\n      isServer: false\n    }]);\n    setNewMessage('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Roboto, sans-serif',\n      fontSize: '1.5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\\u0430\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: message.text,\n        isServer: message.isServer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"RJDv88ak5o+iOqjP4b0VHWkYt8I=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","io","Link","Message","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","socket","onmessage","event","message","data","prevMessages","text","isServer","close","handleSendMessage","trim","send","handleKeyPress","e","key","style","fontFamily","fontSize","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","type","value","onChange","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/03bog/Documents/GitHub/RIP/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from './Message'; // Импортируйте компонент Message\r\n\r\nconst Chat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const socket = useMemo(() => {\r\n        return io('ws://localhost:8080');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.onmessage = (event) => {\r\n            const message = event.data;\r\n            setMessages((prevMessages) => [...prevMessages, { text: message, isServer: true }]);\r\n        };\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, [socket]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        socket.send(newMessage);\r\n        setMessages((prevMessages) => [...prevMessages, { text: newMessage, isServer: false }]);\r\n        setNewMessage('');\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ fontFamily: 'Roboto, sans-serif', fontSize: '1.5rem' }}>\r\n            <Link to=\"/\">Перейти к задачам</Link>\r\n            <div className=\"message-container\">\r\n                {messages.map((message, index) => (\r\n                    <Message key={index} text={message.text} isServer={message.isServer} />\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n            />\r\n            <button onClick={handleSendMessage}>Отправить</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}