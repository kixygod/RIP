{"ast":null,"code":"var _jsxFileName = \"D:\\\\Univer\\\\5sem\\\\RIP\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const socket = io('ws://localhost:8080');\n  socket.send(\"Hello from client!\");\n  socket.on('connect', () => {\n    console.log('Connected to server');\n  });\n  socket.on('message', message => {\n    setMessages(prevMessages => [...prevMessages, message]);\n  });\n\n  // Обработка ошибок\n  socket.on('error', error => {\n    console.error('WebSocket error:', error);\n  });\n\n  // Обработка сообщений от сервера\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Обработка ошибок\n    socket.on('error', error => {\n      console.error('WebSocket error:', error);\n    });\n    return () => {\n      socket.close();\n    };\n  }, [socket]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() === '') {\n      return; // Пустые сообщения не отправляем\n    }\n\n    socket.emit('message', newMessage);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442: \", message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","socket","send","on","console","log","message","prevMessages","error","close","handleSendMessage","trim","emit","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Univer/5sem/RIP/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst Chat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const socket = io('ws://localhost:8080');\r\n    socket.send(\"Hello from client!\");\r\n\r\n    socket.on('connect', () => {\r\n        console.log('Connected to server');\r\n    });\r\n\r\n    socket.on('message', (message) => {\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    // Обработка ошибок\r\n    socket.on('error', (error) => {\r\n        console.error('WebSocket error:', error);\r\n    });\r\n\r\n    // Обработка сообщений от сервера\r\n    useEffect(() => {\r\n        socket.on('connect', () => {\r\n            console.log('Connected to server');\r\n        });\r\n\r\n        socket.on('message', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n\r\n        // Обработка ошибок\r\n        socket.on('error', (error) => {\r\n            console.error('WebSocket error:', error);\r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, [socket]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() === '') {\r\n            return; // Пустые сообщения не отправляем\r\n        }\r\n\r\n        socket.emit('message', newMessage);\r\n        setNewMessage('');\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {messages.map((message, index) => (\r\n                    <div key={index}>Ответ: {message}</div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <button onClick={handleSendMessage}>Отправить</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}