{"ast":null,"code":"var _jsxFileName = \"D:\\\\Univer\\\\5sem\\\\RIP\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [nickname, setNickname] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const newSocket = io('ws://localhost:8080');\n    newSocket.on('connect', () => {\n      console.log('Connected to the server');\n    });\n    newSocket.on('message', message => {\n      if (message.event === 'message') {\n        setMessages(prevMessages => [...prevMessages, message.data]);\n      }\n    });\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, []);\n  const sendMessage = message => {\n    if (socket) {\n      const messageObject = {\n        event: 'message',\n        data: {\n          message,\n          nickname\n        }\n      };\n      socket.emit('message', messageObject);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      sendMessage: sendMessage,\n      setNickname: setNickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"xS8R5D2BlhZD/tF+ecaLLFpRCRE=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","MessageList","MessageInput","jsxDEV","_jsxDEV","Chat","_s","socket","setSocket","nickname","setNickname","messages","setMessages","newSocket","on","console","log","message","event","prevMessages","data","close","sendMessage","messageObject","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Univer/5sem/RIP/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport MessageList from './MessageList';\r\nimport MessageInput from './MessageInput';\r\n\r\nconst Chat = () => {\r\n    const [socket, setSocket] = useState(null);\r\n    const [nickname, setNickname] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io('ws://localhost:8080');\r\n\r\n        newSocket.on('connect', () => {\r\n            console.log('Connected to the server');\r\n        });\r\n\r\n        newSocket.on('message', (message) => {\r\n            if (message.event === 'message') {\r\n                setMessages((prevMessages) => [...prevMessages, message.data]);\r\n            }\r\n        });\r\n\r\n\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.close();\r\n    }, []);\r\n\r\n    const sendMessage = (message) => {\r\n        if (socket) {\r\n            const messageObject = { event: 'message', data: { message, nickname } };\r\n            socket.emit('message', messageObject);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MessageList messages={messages} />\r\n            <MessageInput sendMessage={sendMessage} setNickname={setNickname} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMc,SAAS,GAAGb,EAAE,CAAC,qBAAqB,CAAC;IAE3Ca,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAC1C,CAAC,CAAC;IAEFH,SAAS,CAACC,EAAE,CAAC,SAAS,EAAGG,OAAO,IAAK;MACjC,IAAIA,OAAO,CAACC,KAAK,KAAK,SAAS,EAAE;QAC7BN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,OAAO,CAACG,IAAI,CAAC,CAAC;MAClE;IACJ,CAAC,CAAC;IAGFZ,SAAS,CAACK,SAAS,CAAC;IAEpB,OAAO,MAAMA,SAAS,CAACQ,KAAK,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIL,OAAO,IAAK;IAC7B,IAAIV,MAAM,EAAE;MACR,MAAMgB,aAAa,GAAG;QAAEL,KAAK,EAAE,SAAS;QAAEE,IAAI,EAAE;UAAEH,OAAO;UAAER;QAAS;MAAE,CAAC;MACvEF,MAAM,CAACiB,IAAI,CAAC,SAAS,EAAED,aAAa,CAAC;IACzC;EACJ,CAAC;EAED,oBACInB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA,CAACH,WAAW;MAACU,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCzB,OAAA,CAACF,YAAY;MAACoB,WAAW,EAAEA,WAAY;MAACZ,WAAW,EAAEA;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEd,CAAC;AAACvB,EAAA,CArCID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}